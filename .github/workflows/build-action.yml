name: Builds a Local Action [real]

on:
  repository_dispatch:
    types: ['build-action']
  workflow_dispatch:
    inputs:
      action-name:
        description: 'Github Action Name'
        required: true
        default: ''
      source-ref:
        description: 'Github Action Source Branch'
        required: false
        default: 'main'
      artifact-ref:
        description: 'Github Action Artifact Branch'
        required: false
        default: 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: resolve-dispatch
        run: |
          if [ ! -z "${{github.event.inputs}}" ]; then
            ACTION_NAME="${{github.event.inputs.action-name}}"
            BUILD_SOURCE="${{github.event.inputs.source-ref}}"
            BUILD_TARGET="${{github.event.inputs.artifact-ref}}"       
            echo "Running workflow in 'workflow_dispatch' configuration"
          elif [ ! -z "${{github.event.client_payload}}" ]; then
            ACTION_NAME="${{github.event.client_payload.action-name}}"
            BUILD_SOURCE="${{github.event.client_payload.source-ref}}"
            BUILD_TARGET="${{github.event.client_payload.artifact-ref}}"       
            echo "Running workflow in 'repository_dispatch' configuration"
          else
            echo "::error::Failed to determine runtime configuration, exiting."
            exit 1
          fi     

          echo "ACTION_NAME=${ACTION_NAME}" >> $GITHUB_ENV
          echo "BUILD_SOURCE=${BUILD_SOURCE}" >> $GITHUB_ENV
          echo "BUILD_TARGET=${BUILD_TARGET}" >> $GITHUB_ENV
          
      - name: checkout
        uses: actions/checkout@v2
        
      - name: prepare-environment
        run: |
          git checkout "$BUILD_SOURCE"
          chmod +x "$GITHUB_WORKSPACE/.github/scripts/generate-artifact.sh"
        
      - name: resolve-package
        run: |
          PACKAGE_DIR="$GITHUB_WORKSPACE/$TARGET_ACTIONS_DIR/$ACTION_NAME"
          echo "PACKAGE_DIR=${PACKAGE_DIR}" >> $GITHUB_ENV
          if [ -d "${PACKAGE_DIR}" ]; then
            echo "Resolved package '$ACTION_NAME' at $PACKAGE_DIR/"
          else
            echo "::error::Failed to find package '$ACTION_NAME' in $TARGET_ACTIONS_DIR/"
            exit 1
          fi

      - name: setup-node
        uses: actions/setup-node@v1
      - name: compile-package
        working-directory: ${{env.PACKAGE_DIR}}/
        run: |
          npm ci
          npm run build
      
      - name: prepare-artifact
        run: |
          ARTIFACT_DIR="$GITHUB_WORKSPACE/$ACTION_NAME"
          ARTIFACT_SHA="$GITHUB_SHA"
          ARTIFACT_SHA_SHORT="${GITHUB_SHA:0:7}"
          ARTIFACT_AUTHOR_USER="$GITHUB_ACTOR"
          ARTIFACT_AUTHOR_EMAIL="${GITHUB_ACTOR}@users.noreply.github.com"
          
          echo "ARTIFACT_DIR=${ARTIFACT_DIR}" >> $GITHUB_ENV
          echo "ARTIFACT_SHA=${ARTIFACT_SHA}" >> $GITHUB_ENV
          echo "ARTIFACT_SHA_SHORT=${ARTIFACT_SHA_SHORT}" >> $GITHUB_ENV
          echo "ARTIFACT_AUTHOR_USER=${ARTIFACT_AUTHOR_USER}" >> $GITHUB_ENV
          echo "ARTIFACT_AUTHOR_EMAIL='${ARTIFACT_AUTHOR_EMAIL}" >> $GITHUB_ENV
          
          echo "::group::Artifact Information"
          echo "artifact-name:          $ACTION_NAME"
          echo "artifact-type:          $ARTIFACT_TYPE"
          echo "artifact-sha:           $ARTIFACT_SHA_SHORT (short)"
          echo "artifact-package:       $ARTIFACT_DIR"
          echo "artifact-author-user:   $ARTIFACT_AUTHOR_USER"
          echo "artifact-author-email:  $ARTIFACT_AUTHOR_EMAIL"
          echo "artifact-creation-date: $ARTIFACT_CREATION_DATE"
          echo "artifact-publisher:     $ARTIFACT_PUBLISHER_EMAIL"
          echo "::endgroup::"

          echo "Prepared artifact $ARTIFACT_SHA"

      - name: build-artifact
        run: |
          [ -d "${ACTION_NAME}" ] && rm -rf $ACTION_NAME/* || mkdir -p $ACTION_NAME
          cd $PACKAGE_DIR

          mv dist node_modules action.yml package-lock.json \
          package.json tsconfig.json $ARTIFACT_DIR
          
          "$GITHUB_WORKSPACE/.github/scripts/generate-artifact.sh" $ACTION_NAME $ARTIFACT_TYPE $ARTIFACT_SHA_SHORT \
          $ARTIFACT_DIR $ARTIFACT_AUTHOR_USER $ARTIFACT_AUTHOR_EMAIL $ARTIFACT_PUBLISHER

          echo "Built artifact $ARTIFACT_SHA"
          
      - name: publish-artifact
        run: |
          if (( "$BUILD_SOUCE" != "BUILD_TARGET" )); then
            git stash
            git checkout $BUILD_TARGET
            git stash apply
          fi
          git config user.name "${ARTIFACT_PUBLISHER_NAME}"
          git config user.email "${ARTIFACT_PUBLISHER_EMAIL}"
          git add "${ARTIFACT_DIR}/"
          git commit -m "$(echo -e "action-dist\x3c${ARTIFACT_SHA_SHORT}\x3e\n\n\nCo-authored-by $ARTIFACT_AUTHOR_USER \x3c$ARTIFACT_AUTHOR_EMAIL\x3e")"
          git push

env:
  TARGET_ACTIONS_DIR: '.github/actions'
  ARTIFACT_TYPE: 'action-dist'

  ARTIFACT_PUBLISHER_NAME:  'github-actions'
  ARTIFACT_PUBLISHER_EMAIL: '41898282+github-actions[bot]@users.noreply.github.com'
  
