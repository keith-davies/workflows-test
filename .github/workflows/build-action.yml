name: Build Action in Repository

on:
  repository_dispatch:
    types: ['build-action']
  workflow_dispatch:
    inputs:
      action-name:
        description: 'Github Action Name'
        required: true
        default: ''
      generate-artifact-meta:
        description: 'Generate .artifact file'
        required: false
        default: 'true'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: resolve-dispatch
        run: |
          if [ ! -z "${{github.event.inputs}}" ]; then
            ACTION_NAME="${{github.event.inputs.action-name}}"
            GENERATE_ARTIFACT_META="${{github.event.inputs.generate-artifact-meta}}"
            DEPLOY_SOURCE_TYPE="internal"
            echo "Running workflow in 'workflow_dispatch' configuration"
          elif [ ! -z "${{github.event.client_payload}}" ]; then
            ACTION_NAME="${{github.event.client_payload.action-name}}"
            GENERATE_ARTIFACT_META="${{github.event.client_payload.generate-artifact-meta}}"    
            DEPLOY_SOURCE_TYPE="external"   
            echo "Running workflow in 'repository_dispatch' configuration"
          else
            echo "::error::Failed to determine runtime configuration, exiting."
            exit 1
          fi     

          echo "ACTION_NAME=${ACTION_NAME}" >> $GITHUB_ENV
          echo "GENERATE_ARTIFACT_META=${GENERATE_ARTIFACT_META}" >> $GITHUB_ENV
          echo "DEPLOY_SOURCE_TYPE=${DEPLOY_SOURCE_TYPE}" >> $GITHUB_ENV\
      
      - name: checkout-source
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.WEBSITE_DEPLOY_TOKEN }}
          ref: ${{ env.SOURCE_REF }}
          path: 'source'
          
      - name: checkout-target
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.WEBSITE_DEPLOY_TOKEN }}
          repository: ${{ env.DEPLOY_TARGET_REPOSITORY }}
          ref: ${{ env.DEPLOY_TARGET_REF }}
          path: 'deploy'
        
      - name: setup-environment
        run: |
          chmod +x "source/.github/scripts/generate-artifact.sh"
        
      - name: resolve-package
        run: |
          RELATIVE_PACKAGE_DIR="$SOURCE_PACKAGES_DIR/$ACTION_NAME"
          ABSOLUTE_PACKAGE_DIR="$GITHUB_WORKSPACE/source/$RELATIVE_PACKAGE_DIR"
          if [ -d "${ABSOLUTE_PACKAGE_DIR}" ]; then
            echo "Resolved package '$ACTION_NAME' at $RELATIVE_PACKAGE_DIR/"
          else
            echo "::error::Failed to find package '$ACTION_NAME' in $SOURCE_PACKAGES_DIR/"
            exit 1
          fi
          echo "RELATIVE_PACKAGE_DIR=${RELATIVE_PACKAGE_DIR}" >> $GITHUB_ENV
          echo "ABSOLUTE_PACKAGE_DIR=${ABSOLUTE_PACKAGE_DIR}" >> $GITHUB_ENV

      - name: setup-node
        uses: actions/setup-node@v1

      - name: compile-package
        run: |
          cd $ABSOLUTE_PACKAGE_DIR
          npm ci
          npm run build
      
      - name: prepare-artifact
        run: |
          ARTIFACT_SHA="$GITHUB_SHA"
          ARTIFACT_SHA_SHORT="${GITHUB_SHA:0:7}"
          ARTIFACT_AUTHOR_USER="$GITHUB_ACTOR"
          ARTIFACT_AUTHOR_EMAIL="${GITHUB_ACTOR}@users.noreply.github.com"
          
          echo "ARTIFACT_SHA=${ARTIFACT_SHA}" >> $GITHUB_ENV
          echo "ARTIFACT_SHA_SHORT=${ARTIFACT_SHA_SHORT}" >> $GITHUB_ENV
          echo "ARTIFACT_AUTHOR_USER=${ARTIFACT_AUTHOR_USER}" >> $GITHUB_ENV
          echo "ARTIFACT_AUTHOR_EMAIL=${ARTIFACT_AUTHOR_EMAIL}" >> $GITHUB_ENV
          
          echo "::group::Artifact Information"
          echo "artifact-name:          $ACTION_NAME"
          echo "artifact-type:          $ARTIFACT_TYPE"
          echo "artifact-sha:           $ARTIFACT_SHA_SHORT (short)"
          echo "artifact-package:       $RELATIVE_PACKAGE_DIR"
          echo "artifact-author-user:   $ARTIFACT_AUTHOR_USER"
          echo "artifact-author-email:  $ARTIFACT_AUTHOR_EMAIL"
          echo "artifact-publisher:     $ARTIFACT_PUBLISHER_EMAIL"
          echo "::endgroup::"
          
          echo "::set-output name=artifact-name::${ACTION_NAME}"
          echo "::set-output name=artifact-type::${ARTIFACT_TYPE}"
          echo "::set-output name=artifact-sha::${ARTIFACT_SHA_SHORT}"
          echo "::set-output name=artifact-package::${RELATIVE_PACKAGE_DIR}"
          echo "::set-output name=artifact-author-user::${ARTIFACT_AUTHOR_USER}"
          echo "::set-output name=artifact-author-email::${ARTIFACT_AUTHOR_EMAIL}"
          echo "::set-output name=artifact-publisher::${ARTIFACT_PUBLISHER_EMAIL}"

          echo "Prepared artifact $ARTIFACT_SHA"

      - name: build-artifact
        run: |
          ARTIFACT_DEPLOY_DIR="$GITHUB_WORKSPACE/deploy/$ACTION_NAME"
          echo "ARTIFACT_DEPLOY_DIR=${ARTIFACT_DEPLOY_DIR}" >> $GITHUB_ENV
          
          [ -d "${ARTIFACT_DEPLOY_DIR}" ] && rm -rf $ARTIFACT_DEPLOY_DIR/* || mkdir -p $ARTIFACT_DEPLOY_DIR
          (cd $ABSOLUTE_PACKAGE_DIR && mv -f dist node_modules action.yml package-lock.json package.json tsconfig.json $ARTIFACT_DEPLOY_DIR)
          
          if [ "$GENERATE_ARTIFACT_META" != "false" ]; then
            "source/.github/scripts/generate-artifact.sh" "$ARTIFACT_DEPLOY_DIR" "$ACTION_NAME" "$ARTIFACT_TYPE" "$ARTIFACT_SHA" \
            "$RELATIVE_PACKAGE_DIR" "$ARTIFACT_AUTHOR_USER" "$ARTIFACT_AUTHOR_EMAIL" "$ARTIFACT_PUBLISHER_EMAIL" \
            "{\"deploy-type\":\"$DEPLOY_SOURCE_TYPE\"}"
          fi

          echo "Built artifact $ARTIFACT_SHA"
          
      - name: publish-artifact
        run: |
          cd deploy
          git config user.name "${ARTIFACT_PUBLISHER_USER}"
          git config user.email "${ARTIFACT_PUBLISHER_EMAIL}"
          git add "${ARTIFACT_DEPLOY_DIR}/" &>/dev/null
          git commit -m "$(echo -e "${ARTIFACT_TYPE}\x3c${ARTIFACT_SHA_SHORT}\x3e\n\n\nCo-authored-by ${ARTIFACT_AUTHOR_USER} \x3c${ARTIFACT_AUTHOR_EMAIL}\x3e")" &>/dev/null
          git push
          
          echo "Deployed artifact $ARTIFACT_SHA to target branch '$DEPLOY_TARGET_REF'"
          exit 0
      
env:
  SOURCE_REF: 'main'
  SOURCE_PACKAGES_DIR: '.github/actions'

  DEPLOY_TARGET_REPOSITORY: 'keith-davies/keith-davies.github.io.git'
  DEPLOY_TARGET_REF: 'gh-action-dist'

  ARTIFACT_TYPE: 'action-dist'

  ARTIFACT_PUBLISHER_USER:  'github-actions[bot]'
  ARTIFACT_PUBLISHER_EMAIL: '41898282+github-actions[bot]@users.noreply.github.com'
